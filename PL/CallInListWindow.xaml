<Window x:Class="PL.CallInListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
        Title="CallInListWindow" Height="450" Width="800"
        Closed="Window_Closed"
        Loaded="Window_Loaded">


    <!--External Grid-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="500*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Internal, Upper Grid-->

        <Grid HorizontalAlignment="Stretch" Height="auto" Grid.Row="0" VerticalAlignment="Stretch" Width="auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="301*"/>
                <ColumnDefinition Width="99*"/>
                <ColumnDefinition Width="400*"/>
            </Grid.ColumnDefinitions>

            <Label Content="Select a file to sort by" HorizontalAlignment="Left" Margin="200,0,0,0" VerticalAlignment="Center" Width="184" Grid.Column="2"/>
            <ComboBox ItemsSource="{Binding Source={StaticResource CallInListCollectionKey}}"  SelectionChanged="CallSelector_SelectionChanged" 
                      SelectedValue="{Binding CallInList, Mode=TwoWay}" Grid.Column="2" Margin="0,0,233,0"/>


            <Label Content="Select a call status to filter" HorizontalAlignment="Left" Margin="206,0,0,2" VerticalAlignment="Bottom" Width="184" Grid.ColumnSpan="2"/>
            <ComboBox ItemsSource="{Binding Source={StaticResource StatusCollectionKey}}"  SelectionChanged="Call_Filter" 
                      SelectedValue="{Binding StatusCallInList, Mode=TwoWay}" Margin="0,1,134,-2"/>



        </Grid>

        <Button Content="Add" Grid.Row="2" HorizontalAlignment="Center" Height="50" Width="100" Click="btnAdd_Click"/>

        <DataGrid Grid.Row="1" ItemsSource="{Binding CallList}" AutoGenerateColumns="False"  SelectedItem="{Binding SelectedCall}" MouseDoubleClick="dtgList_MouseDoubleClick"  CanUserAddRows="False">
            <!--הגדרת סגנון לכותרות-->
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="AliceBlue"/>
                    <Setter Property="Foreground" Value="#0D1821"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="5"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.Columns>

                <DataGridTextColumn Binding="{Binding CallId}" Header="CallId" Width="*"/>

                <DataGridTemplateColumn Header="Call Type">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Type}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="Puncture">
                                                <Setter Property="Foreground" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Cables">
                                                <Setter Property="Foreground" Value="Blue" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="LockedCar">
                                                <Setter Property="Foreground" Value="Green" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding TimeOpened}" Header="Time Opened" Width="*"/>
                <DataGridTextColumn Binding="{Binding TimeLeft}" Header="Time Left" Width="*"/>
                <DataGridTextColumn Binding="{Binding LastVolunteer}" Header="Last Volunteer" Width="*"/>
                <DataGridTextColumn Binding="{Binding TotalTime}" Header="Total Time" Width="*"/>

                <DataGridTemplateColumn Header="Status">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Status}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Status}" Value="Open">
                                                <Setter Property="Foreground" Value="#FFD700" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Treat">
                                                <Setter Property="Foreground" Value="Orange" />

                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Close">
                                                <Setter Property="Foreground" Value="#98FB98" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Expired">
                                                <Setter Property="Foreground" Value="Blue" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="RiskOpen">
                                                <Setter Property="Foreground" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="TreatInRisk">
                                                <Setter Property="Foreground" Value="Pink" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding SumAssignment}" Header="SumAssignment" Width="*"/>


                <DataGridTemplateColumn Header="Actions">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!-- שימוש ב-StackPanel כדי להוסיף כפתור נוסף -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                                <!-- כפתור למחיקת קריאה -->
                                <Button Content="Delete" Click="btnDelete_Click"/>

                                <!-- כפתור לביטול הקצאה -->
                                <Button Content="Cancel Assignment" Click="btnCancelAssignment_Click"/>
                            </StackPanel>
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button HorizontalAlignment="Left" Margin="10,20,0,0" Grid.Row="2" VerticalAlignment="Top" Click="btnBack_Click">
            <Path Data="M10,0 L0,10 L10,20 L10,14 L20,14 L20,6 L10,6 Z" 
  Fill="Black" 
  Width="20" 
  Height="20" 
  VerticalAlignment="Center"/>
        </Button>
    </Grid>
</Window>

    